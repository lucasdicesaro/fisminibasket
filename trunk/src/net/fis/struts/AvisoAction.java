package net.fis.struts;


/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.fis.hibernate.Aviso;
import net.fis.hibernate.AvisoDAO;
import net.fis.hibernate.JugadorDAO;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;


/**
 * MyEclipse Struts Creation date: 11-16-2006
 * 
 * XDoclet definition:
 * 
 * @struts.action input="/abm/aviso.jsp" validate="true"
 */
public class AvisoAction extends DispatchAction
{

    /**
     * 
     * @param newMessage
     * @param request
     */
    public void setActionMessages(String newMessage, HttpServletRequest request)
    {

        ActionMessages messages = new ActionMessages();
        ActionMessage message = new ActionMessage(newMessage);

        messages.add(ActionMessages.GLOBAL_MESSAGE, message);
        saveMessages(request, messages);
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward listAll(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        HttpSession session = request.getSession();

        AvisoDAO avisoDAO = new AvisoDAO();

        List resultados = avisoDAO.findAll(" order by aviId");

        session.setAttribute("avisos", resultados);
        ActionForward forward = mapping.findForward("avisos");

        return forward;

    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @throws Exception
     */
    public void show(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        AvisoDAO avisoDAO = new AvisoDAO();
        DynaActionForm daf = (DynaActionForm) form;
        Aviso aviso = avisoDAO.findById(new Integer((String) daf.getString("id")));

        daf.set("aviso", String.valueOf(aviso.getAviId()));
        daf.set("fecha", String.valueOf(aviso.getAviFecha()));
        daf.set("estado", String.valueOf(aviso.getAviEstado()));
        daf.set("tipo", String.valueOf(aviso.getAviTipo()));
        daf.set("jugador", String.valueOf(aviso.getJugador().getJugId()));

    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward listOne(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        show(mapping, form, request, response);

        DynaActionForm daf = (DynaActionForm) form;

        daf.set("metodo", "mostrar");
        ActionForward forward = mapping.findForward("select");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward setInsert(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        DynaActionForm daf = (DynaActionForm) form;
        daf.set("metodo", "alta");

        ActionForward forward = mapping.findForward("create");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward insert(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        Aviso aviso = new Aviso();
        aviso.setAviEstado((String) PropertyUtils.getSimpleProperty(form, "estado"));
        // aviso.setAviFecha((String) PropertyUtils.getSimpleProperty(form, "fecha"));
        aviso.setAviTipo((String) PropertyUtils.getSimpleProperty(form, "tipo"));
        JugadorDAO jugadorDAO = new JugadorDAO();
        aviso.setJugador(jugadorDAO.findById(new Integer((String) PropertyUtils.getSimpleProperty(form, "jugador"))));

        AvisoDAO avisoDAO = new AvisoDAO();
        avisoDAO.save(aviso);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward delete(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        Aviso aviso = new Aviso();
        aviso.setAviId(new Integer((String) PropertyUtils.getSimpleProperty(form, "id")));

        AvisoDAO avisoDAO = new AvisoDAO();
        avisoDAO.delete(aviso);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward setUpdate(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        show(mapping, form, request, response);

        DynaActionForm daf = (DynaActionForm) form;

        daf.set("metodo", "modificacion");
        ActionForward forward = mapping.findForward("update");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward update(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        Aviso aviso = new Aviso();
        aviso.setAviId(new Integer((String) PropertyUtils.getSimpleProperty(form, "id")));
        aviso.setAviEstado((String) PropertyUtils.getSimpleProperty(form, "estado"));
        // aviso.setAviFecha((String) PropertyUtils.getSimpleProperty(form, "fecha"));
        aviso.setAviTipo((String) PropertyUtils.getSimpleProperty(form, "tipo"));
        JugadorDAO jugadorDAO = new JugadorDAO();
        aviso.setJugador(jugadorDAO.findById(new Integer((String) PropertyUtils.getSimpleProperty(form, "jugador"))));

        AvisoDAO avisoDAO = new AvisoDAO();
        avisoDAO.update(aviso);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward unespecified(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        return (mapping.findForward("error"));
    }

}
