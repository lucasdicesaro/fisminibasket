package net.fis.struts;


/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.fis.hibernate.Medico;
import net.fis.hibernate.MedicoDAO;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;


/**
 * MyEclipse Struts Creation date: 11-16-2006
 * 
 * XDoclet definition:
 * 
 * @struts.action input="/abm/medico" validate="true"
 */
public class MedicoAction extends DispatchAction
{

    /**
     * 
     * @param newMessage
     * @param request
     */
    public void setActionMessages(String newMessage, HttpServletRequest request)
    {

        ActionMessages messages = new ActionMessages();
        ActionMessage message = new ActionMessage(newMessage);

        messages.add(ActionMessages.GLOBAL_MESSAGE, message);
        saveMessages(request, messages);
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward listAll(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        HttpSession session = request.getSession();

        MedicoDAO medicoDAO = new MedicoDAO();

        List resultados = medicoDAO.findAll(" order by medId");

        session.setAttribute("medicos", resultados);
        ActionForward forward = mapping.findForward("medicos");

        return forward;

    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @throws Exception
     */
    public void show(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        MedicoDAO medicoDAO = new MedicoDAO();
        DynaActionForm daf = (DynaActionForm) form;
        Medico medico = medicoDAO.findById(new Integer((String) daf.getString("id")));

        daf.set("id", String.valueOf(medico.getMedId()));
        daf.set("apellido", String.valueOf(medico.getMedApellido()));
        daf.set("matricula", String.valueOf(medico.getMedMatricula()));
        daf.set("nombre", String.valueOf(medico.getMedNombre()));

    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward listOne(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        show(mapping, form, request, response);

        DynaActionForm daf = (DynaActionForm) form;

        daf.set("metodo", "mostrar");
        ActionForward forward = mapping.findForward("select");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward setInsert(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        DynaActionForm daf = (DynaActionForm) form;
        daf.set("metodo", "alta");

        ActionForward forward = mapping.findForward("create");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward insert(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        Medico medico = new Medico();
        medico.setMedMatricula((String) PropertyUtils.getSimpleProperty(form, "matricula"));
        medico.setMedApellido((String) PropertyUtils.getSimpleProperty(form, "apellido"));
        medico.setMedNombre((String) PropertyUtils.getSimpleProperty(form, "nombre"));

        MedicoDAO medicoDAO = new MedicoDAO();
        medicoDAO.save(medico);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward delete(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        MedicoDAO medicoDAO = new MedicoDAO();
        Medico medico = medicoDAO.findById(new Integer((String) PropertyUtils.getSimpleProperty(form, "id")));
        medicoDAO.delete(medico);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward setUpdate(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        show(mapping, form, request, response);

        DynaActionForm daf = (DynaActionForm) form;

        daf.set("metodo", "modificacion");
        ActionForward forward = mapping.findForward("update");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward update(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {

        Medico medico = new Medico();
        medico.setMedId(new Integer((String) PropertyUtils.getSimpleProperty(form, "id")));
        medico.setMedMatricula((String) PropertyUtils.getSimpleProperty(form, "matricula"));
        medico.setMedApellido((String) PropertyUtils.getSimpleProperty(form, "apellido"));
        medico.setMedNombre((String) PropertyUtils.getSimpleProperty(form, "nombre"));

        MedicoDAO medicoDAO = new MedicoDAO();
        medicoDAO.update(medico);

        ActionForward forward = mapping.findForward("success");

        return forward;
    }

    /**
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    public ActionForward unespecified(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception
    {
        return listAll(mapping, form, request, response);
    }

}
